require("source-map-support").install(),function(e,r){"object"==typeof exports&&"object"==typeof module?module.exports=r():"function"==typeof define&&define.amd?define("library",[],r):"object"==typeof exports?exports.library=r():e.library=r()}(global,(function(){return function(e){var r={};function t(n){if(r[n])return r[n].exports;var a=r[n]={i:n,l:!1,exports:{}};return e[n].call(a.exports,a,a.exports,t),a.l=!0,a.exports}return t.m=e,t.c=r,t.d=function(e,r,n){t.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:n})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,r){if(1&r&&(e=t(e)),8&r)return e;if(4&r&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(t.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&r&&"string"!=typeof e)for(var a in e)t.d(n,a,function(r){return e[r]}.bind(null,a));return n},t.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(r,"a",r),r},t.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},t.p="",t(t.s=12)}([function(e,r){e.exports=require("@babel/runtime/regenerator")},function(e,r){e.exports=require("@babel/runtime/helpers/asyncToGenerator")},function(e,r){e.exports=require("lodash")},function(e,r){e.exports=require("bluebird")},function(e,r){e.exports=require("node-eval")},function(e,r){e.exports=require("path")},function(e,r){e.exports=require("@babel/runtime/helpers/defineProperty")},function(e,r){e.exports=require("@babel/runtime/helpers/classCallCheck")},function(e,r){e.exports=require("@babel/runtime/helpers/createClass")},function(e,r){e.exports=require("xml2js")},function(e,r){e.exports=require("fs")},function(e,r){e.exports=require("sqlstring")},function(e,r,t){"use strict";t.r(r);var n=t(6),a=t.n(n),s=t(0),c=t.n(s),i=t(1),u=t.n(i),o=t(7),p=t.n(o),f=t(8),l=t.n(f),h=t(9),x=t.n(h),b=t(4),v=t.n(b),y=t(10),d=t(2),k=t(3),m=t.n(k),g={queryFormat:/:([\w_.()]+)/g,stringifyObjects:!1,timezone:!1},w=t(11),O=t.n(w),_=t(5),j=new x.a.Parser({trim:!0,normalize:!0,preserveChildrenOrder:!0,explicitChildren:!0,explicitCharkey:!0,charsAsChildren:!0}),$=function(){function e(){p()(this,e),this.tablesRaw=[],this.tables=[],this.lastQuery={},this.sqlData={},this.references=[]}var r,t,n,s,i,o,f,h,x,b,k,w,$;return l()(e,[{key:"setConnection",value:function(e){this.pool=e,this.pool.getConnectionAsync=m.a.promisify(this.pool.getConnection)}},{key:"getConnection",value:function(){return Object(d.isFunction)(this.pool)?this.pool():this.pool}},{key:"fnModel",value:function(e,r){var t={},n=this.getQuery(e),a=this;return Object(d.forEach)(n,(function(n,s){"lastQuery"===s?Object.defineProperty(t,s,{get:function(){return a.lastQuery[e]}}):t[s]=Object(d.partialRight)(n,r)})),t}},{key:"transaction",value:($=u()(c.a.mark((function e(r){var t,n;return c.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,this.pool.getConnectionAsync();case 3:return(t=e.sent).table=Object(d.partialRight)(this.fnModel,t).bind(this),e.next=7,t.beginTransaction();case 7:return e.next=9,r(t);case 9:return n=e.sent,e.next=12,t.commit();case 12:t.release(),e.next=21;break;case 15:return e.prev=15,e.t0=e.catch(0),e.next=19,t.rollback();case 19:throw t.release(),e.t0;case 21:return e.abrupt("return",n);case 22:case"end":return e.stop()}}),e,this,[[0,15]])}))),function(e){return $.apply(this,arguments)})},{key:"loadQuery",value:function(e,r,t){var n=this;Object(d.forEach)(t,(function(e,t){n.sqlData=0===t?{}:n.sqlData;var a=Object(_.extname)(e)?Object(_.join)(r,e):Object(_.join)(r,e+".xml"),s=Object(y.readFileSync)(a,"utf-8");j.parseString(s,(function(e,r){if(e)return console.error(e.stack||e);var t=r.query;n.references=t.sql;Object(d.chain)(["select","update","insert","delete"]).map((function(e){return t[e]||[]})).flatten().map((function(e){return n.sqlData[e.$.id]=e})).value()}))})),this.tablesRaw[e]=this.sqlData,delete this.tables[e]}},{key:"table",value:function(e,r,t){if(!t)return this.getQuery(e);this.loadQuery(e,r,t)}},{key:"model",value:function(){}},{key:"getQuery",value:function(e){var r=this;if(this.tables[e])return this.tables[e];var t=this,n=this.tablesRaw[e],a={get lastQuery(){return t.lastQuery[e]}};return Object(d.forEach)(n,(function(s,i){a[i]=function(){var a=u()(c.a.mark((function a(s,u){var o,p;return c.a.wrap((function(a){for(;;)switch(a.prev=a.next){case 0:return a.next=2,r.process(n[i],s).then((function(e){return r.processVariable(e._,s)})).catch((function(e){return console.error(e.stack)}));case 2:if(o=a.sent,t.lastQuery[e]=o,!u){a.next=8;break}return a.abrupt("return",u.query(o).finally((function(){return u.release()})));case 8:if(!(p=r.getConnection())){a.next=13;break}return a.abrupt("return",p.query(o));case 13:return a.abrupt("return",o);case 14:case"end":return a.stop()}}),a)})));return function(e,r){return a.apply(this,arguments)}}()})),this.tables[e]=a,a}},{key:"process",value:(w=u()(c.a.mark((function e(r,t){var n=this;return c.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt("return",m.a.resolve(r).then(function(){var e=u()(c.a.mark((function e(r){return c.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r._="",e.next=3,m.a.each(r.$$,function(){var e=u()(c.a.mark((function e(r){var a;return c.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if("__text__"!==r["#name"]){e.next=3;break}e.next=6;break;case 3:return a="process".concat(n.capitalizeFirstLetter(r["#name"])),e.next=6,n[a](r,t);case 6:case"end":return e.stop()}}),e)})));return function(r){return e.apply(this,arguments)}}());case 3:return n.merge_(r),e.abrupt("return",r);case 5:case"end":return e.stop()}}),e)})));return function(r){return e.apply(this,arguments)}}()));case 1:case"end":return e.stop()}}),e)}))),function(e,r){return w.apply(this,arguments)})},{key:"processInclude",value:(k=u()(c.a.mark((function e(r,t){var n,a;return c.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(n=r.$.refid,a=Object(d.find)(this.references,{$:{id:n}})){e.next=4;break}throw new Error("There is no include id: ".concat(n));case 4:return e.next=6,this.processDeep(a,t);case 6:r._=a._;case 7:case"end":return e.stop()}}),e,this)}))),function(e,r){return k.apply(this,arguments)})},{key:"processDeep",value:(b=u()(c.a.mark((function e(r,t){return c.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(0===Object.keys(r).filter((function(e){return!/_|\${1,2}|#name/.test(e)})).length){e.next=4;break}return e.next=4,this.process(r,t);case 4:case"end":return e.stop()}}),e,this)}))),function(e,r){return b.apply(this,arguments)})},{key:"processIf",value:(x=u()(c.a.mark((function e(r,t){var n;return c.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.processVariable(r.$.test,t).then(this.changeAndOr);case 2:if(n=e.sent,!v()(n)){e.next=11;break}return e.next=6,this.processDeep(r,t);case 6:return e.next=8,this.processVariable(r._,t);case 8:r._=e.sent,e.next=12;break;case 11:r._="";case 12:case"end":return e.stop()}}),e,this)}))),function(e,r){return x.apply(this,arguments)})},{key:"processChoose",value:(h=u()(c.a.mark((function e(r,t){var n=this;return c.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,m.a.each(r.$$,function(){var e=u()(c.a.mark((function e(r){var a,s;return c.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!(a=Object(d.get)(r,"$.test"))){e.next=15;break}return e.next=4,n.processVariable(a,t).then(n.changeAndOr);case 4:if(s=e.sent,!v()(s)){e.next=14;break}return e.next=8,n.processDeep(r,t);case 8:return e.next=10,n.processVariable(r._,t);case 10:throw r._=e.sent,new m.a.CancellationError("matched");case 14:r._="";case 15:case"end":return e.stop()}}),e)})));return function(r){return e.apply(this,arguments)}}()).catch(m.a.CancellationError,(function(){return""}));case 2:this.merge_(r,!0);case 3:case"end":return e.stop()}}),e,this)}))),function(e,r){return h.apply(this,arguments)})},{key:"processTrim",value:(f=u()(c.a.mark((function e(r,t){var n=this;return c.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,m.a.each(r.$$,function(){var e=u()(c.a.mark((function e(r){var a,s;return c.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!(a=Object(d.get)(r,"$.test"))){e.next=14;break}return e.next=4,n.processVariable(a,t).then(n.changeAndOr);case 4:if(s=e.sent,!v()(s)){e.next=13;break}return e.next=8,n.processDeep(r,t);case 8:return e.next=10,n.processVariable(r._,t);case 10:r._=e.sent,e.next=14;break;case 13:r._="";case 14:case"end":return e.stop()}}),e)})));return function(r){return e.apply(this,arguments)}}());case 2:this.merge_(r),this.processFix(r,r);case 4:case"end":return e.stop()}}),e,this)}))),function(e,r){return f.apply(this,arguments)})},{key:"processWhere",value:(o=u()(c.a.mark((function e(r,t){var n=this;return c.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,m.a.each(r.$$,function(){var e=u()(c.a.mark((function e(r){var a,s;return c.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!(a=Object(d.get)(r,"$.test"))){e.next=14;break}return e.next=4,n.processVariable(a,t).then(n.changeAndOr);case 4:if(s=e.sent,!v()(s)){e.next=13;break}return e.next=8,n.processDeep(r,t);case 8:return e.next=10,n.processVariable(r._,t);case 10:r._=e.sent,e.next=14;break;case 13:r._="";case 14:case"end":return e.stop()}}),e)})));return function(r){return e.apply(this,arguments)}}());case 2:this.merge_(r),this.processFix(r,{$:{prefixOverrides:"and |or ",prefix:"WHERE"}});case 4:case"end":return e.stop()}}),e,this)}))),function(e,r){return o.apply(this,arguments)})},{key:"processSet",value:(i=u()(c.a.mark((function e(r,t){var n=this;return c.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,m.a.each(r.$$,function(){var e=u()(c.a.mark((function e(r){var a,s;return c.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!(a=Object(d.get)(r,"$.test"))){e.next=14;break}return e.next=4,n.processVariable(a,t).then(n.changeAndOr);case 4:if(s=e.sent,!v()(s)){e.next=13;break}return e.next=8,n.processDeep(r,t);case 8:return e.next=10,n.processVariable(r._,t);case 10:r._=e.sent,e.next=14;break;case 13:r._="";case 14:case"end":return e.stop()}}),e)})));return function(r){return e.apply(this,arguments)}}());case 2:this.merge_(r),this.processFix(r,{$:{suffixOverrides:",",prefix:"SET"}});case 4:case"end":return e.stop()}}),e,this)}))),function(e,r){return i.apply(this,arguments)})},{key:"processForeach",value:(s=u()(c.a.mark((function e(r,t){var n,s,i=this;return c.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.processDeep(r,t);case 2:return n=Object(d.get)(t,r.$.collection)||[],s=[],e.next=6,m.a.each(n,function(){var e=u()(c.a.mark((function e(t,n){var u,o;return c.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,i.processVariable(r._,(u={},a()(u,r.$.item,t),a()(u,r.$.index,n),u));case 2:o=e.sent,s.push(o);case 4:case"end":return e.stop()}}),e)})));return function(r,t){return e.apply(this,arguments)}}());case 6:r._=s.join(r.$.separator),r.$.suffixOverrides=r.$.separator,r.$.prefix=r.$.open,r.$.suffix=r.$.close,this.processFix(r,r);case 11:case"end":return e.stop()}}),e,this)}))),function(e,r){return s.apply(this,arguments)})},{key:"processBind",value:(n=u()(c.a.mark((function e(r,t){var n;return c.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.processVariable(r.$.value,t).then(this.changeAndOr);case 2:n=e.sent,t[r.$.name]=v()(n);case 4:case"end":return e.stop()}}),e,this)}))),function(e,r){return n.apply(this,arguments)})},{key:"processVariable",value:(t=u()(c.a.mark((function e(r,t){var n,a,s;return c.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t||(n=r),a=O.a.escape,s=g.queryFormat?new RegExp(g.queryFormat,"g"):/#{([\w_.]+)}/g,n=r.replace(/\)/g," )").replace(/\( \)/g,"()").replace(s,(function(e,r){r=r.replace(/\(\)/g,"");var n=Object(d.get)(t,r);return Object(d.isFunction)(n)?n=n():(Object(d.isObject)(n)||Object(d.isArray)(n))&&(n=!0),a(n,g.stringifyObjects,g.timezone)})),e.abrupt("return",n.replace(/^\s+|\s+$/g,"").replace(/\s+/g," ").replace(/NULL/g,"undefined"));case 5:case"end":return e.stop()}}),e)}))),function(e,r){return t.apply(this,arguments)})},{key:"changeAndOr",value:(r=u()(c.a.mark((function e(r){return c.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt("return",r.replace(/ and /gi," && ").replace(/ or /gi," || "));case 1:case"end":return e.stop()}}),e)}))),function(e){return r.apply(this,arguments)})},{key:"processFix",value:function(e,r){if(r.$.prefixOverrides){var t=new RegExp("^".concat(r.$.prefixOverrides),"gi");e._=e._.replace(t,"")}if(r.$.suffixOverrides){var n=new RegExp("".concat(r.$.suffixOverrides,"$"),"gi");e._=e._.replace(n,"")}Object(d.isEmpty)(e._)||(e._="".concat(r.$.prefix||""," ").concat(e._," ").concat(r.$.suffix||""))}},{key:"capitalizeFirstLetter",value:function(e){return e.charAt(0).toUpperCase()+e.slice(1)}},{key:"merge_",value:function(e,r){var t=[];Object(d.forEach)(e.$$,(function(e){if(e._&&(t.push(e._),r))return!1})),e._=t.join(" ")}}]),e}();r.default=new $}])}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,